<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
		default-autowire="byName">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->	
	<context:component-scan base-package="com.home.ktdn.controller" />
	
	<context:annotation-config />
 
	<default-servlet-handler/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- <jee:jndi-lookup id="dataSource" jndi-name="jdbc/ktdnDB"/> -->
	
	<!-- Hibernate 4 SessionFactory Bean definition -->
	<!-- <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" value="com.home.ktdn.data.model" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.jdbc.batch_size">50</beans:prop>
				<beans:prop key="hibernate.connection.release_mode">after_transaction</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->
	
	<!-- <beans:import resource="../beans/Omm-Business.xml"/> -->
	<!-- <beans:import resource="../beans/business.xml"/> -->
	
	<aop:aspectj-autoproxy/>
	
	<!-- <tx:annotation-driven transaction-manager="transactionManager" />
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean> -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="5000000" />
	</beans:bean>
	
	<beans:bean id="requestHandler" class="com.home.ktdn.aspectj.RequestHandler"/>
	
	<!-- <beans:bean id="documentationConfig" class="com.home.ktdn.setting.SwaggerConfiguration"/>
	
	<resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<resources mapping="/webjars/**"  location="classpath:/META-INF/resources/webjars/" /> -->
	
</beans:beans>
